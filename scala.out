\BOOKMARK [1][-]{section.1}{Einf\374hrung}{}
\BOOKMARK [2][-]{subsection.1.1}{Einfache Programme}{section.1}
\BOOKMARK [1][-]{section.2}{Eigenschaften zur Sprache}{}
\BOOKMARK [2][-]{subsection.2.1}{Paradigmen von Scala}{section.2}
\BOOKMARK [2][-]{subsection.2.2}{Klassen}{section.2}
\BOOKMARK [3][-]{subsubsection.2.2.1}{Klassenhierarchie}{subsection.2.2}
\BOOKMARK [3][-]{subsubsection.2.2.2}{Klassenimport}{subsection.2.2}
\BOOKMARK [2][-]{subsection.2.3}{Scala hat uniformes Objektmodel}{section.2}
\BOOKMARK [2][-]{subsection.2.4}{Operationen sind Objekte}{section.2}
\BOOKMARK [2][-]{subsection.2.5}{Varablendeklarationen}{section.2}
\BOOKMARK [2][-]{subsection.2.6}{if/else und while}{section.2}
\BOOKMARK [2][-]{subsection.2.7}{for-Schleife}{section.2}
\BOOKMARK [2][-]{subsection.2.8}{throw und try/catch/finally}{section.2}
\BOOKMARK [2][-]{subsection.2.9}{Kommentare}{section.2}
\BOOKMARK [2][-]{subsection.2.10}{Enumerations}{section.2}
\BOOKMARK [1][-]{section.3}{Unsortiert}{}
\BOOKMARK [2][-]{subsection.3.1}{Alles ist ein Objekt}{section.3}
\BOOKMARK [2][-]{subsection.3.2}{Anonyme Funktionen}{section.3}
\BOOKMARK [1][-]{section.4}{Ausdr\374cke und einfache Funktionen}{}
\BOOKMARK [2][-]{subsection.4.1}{Methodenaufrufe}{section.4}
\BOOKMARK [2][-]{subsection.4.2}{Funktionen}{section.4}
\BOOKMARK [2][-]{subsection.4.3}{Parameter}{section.4}
\BOOKMARK [2][-]{subsection.4.4}{Bedingte Ausdr\374cke}{section.4}
\BOOKMARK [2][-]{subsection.4.5}{Verschachtelte Funktionen}{section.4}
\BOOKMARK [2][-]{subsection.4.6}{Schwanzrekursion}{section.4}
\BOOKMARK [1][-]{section.5}{Erste-Klassen Funktionen}{}
\BOOKMARK [2][-]{subsection.5.1}{Deklaration von Funktionen}{section.5}
\BOOKMARK [2][-]{subsection.5.2}{Anonyme Funktionen}{section.5}
\BOOKMARK [2][-]{subsection.5.3}{Currying}{section.5}
\BOOKMARK [1][-]{section.6}{Klassen und Objekte}{}
\BOOKMARK [2][-]{subsection.6.1}{Konstruktoren}{section.6}
\BOOKMARK [2][-]{subsection.6.2}{verschachtelte Klassen}{section.6}
\BOOKMARK [2][-]{subsection.6.3}{Abstraktion}{section.6}
\BOOKMARK [2][-]{subsection.6.4}{Overriding}{section.6}
\BOOKMARK [2][-]{subsection.6.5}{Companion Objekte}{section.6}
\BOOKMARK [2][-]{subsection.6.6}{Komposition}{section.6}
\BOOKMARK [2][-]{subsection.6.7}{Dekomposition}{section.6}
\BOOKMARK [2][-]{subsection.6.8}{Gleichheit von Objekten}{section.6}
\BOOKMARK [2][-]{subsection.6.9}{Case-Klassen}{section.6}
\BOOKMARK [2][-]{subsection.6.10}{Pattern Matching}{section.6}
\BOOKMARK [2][-]{subsection.6.11}{traits}{section.6}
\BOOKMARK [1][-]{section.7}{Generische Typen und Methoden}{}
\BOOKMARK [2][-]{subsection.7.1}{Annotationen Varianz}{section.7}
\BOOKMARK [2][-]{subsection.7.2}{Tuples}{section.7}
\BOOKMARK [2][-]{subsection.7.3}{Wann man explizite Typannotationen braucht}{section.7}
\BOOKMARK [1][-]{section.8}{Listen und der Spa\337 mit der Unver\344nderlichkeit}{}
\BOOKMARK [2][-]{subsection.8.1}{Scala Listen, Tupel and Map-Klassen}{section.8}
\BOOKMARK [2][-]{subsection.8.2}{List[T]}{section.8}
\BOOKMARK [2][-]{subsection.8.3}{Transformation}{section.8}
\BOOKMARK [2][-]{subsection.8.4}{Tupel}{section.8}
\BOOKMARK [2][-]{subsection.8.5}{Map[K,V]}{section.8}
\BOOKMARK [2][-]{subsection.8.6}{Option[T]}{section.8}
\BOOKMARK [1][-]{section.9}{Spa\337 mit Funktionen}{}
\BOOKMARK [2][-]{subsection.9.1}{Partielle Anwendungen und Funktionen}{section.9}
\BOOKMARK [2][-]{subsection.9.2}{Funktionen und Typparameter}{section.9}
\BOOKMARK [2][-]{subsection.9.3}{Funktionen in Container packen}{section.9}
\BOOKMARK [1][-]{section.10}{Pattern-Matching}{}
\BOOKMARK [1][-]{section.11}{Varianz}{}
\BOOKMARK [2][-]{subsection.11.1}{Invariante Parametertypen}{section.11}
\BOOKMARK [2][-]{subsection.11.2}{Kovariante Parametertypen}{section.11}
\BOOKMARK [2][-]{subsection.11.3}{Kovariante Methoden}{section.11}
\BOOKMARK [2][-]{subsection.11.4}{Varianzregeln}{section.11}
\BOOKMARK [1][-]{section.12}{Scalas Objekt System}{}
\BOOKMARK [2][-]{subsection.12.1}{Typhierarchie}{section.12}
\BOOKMARK [2][-]{subsection.12.2}{Linearisierung der Objekthierarchie}{section.12}
\BOOKMARK [1][-]{section.13}{FP in Scala}{}
\BOOKMARK [2][-]{subsection.13.1}{Was FP ist}{section.13}
\BOOKMARK [2][-]{subsection.13.2}{FP in Scala}{section.13}
\BOOKMARK [2][-]{subsection.13.3}{Rekursion}{section.13}
\BOOKMARK [2][-]{subsection.13.4}{Tail Calls und Tail-Call Optimierung}{section.13}
\BOOKMARK [2][-]{subsection.13.5}{Funktionale Datenstrukturen}{section.13}
\BOOKMARK [2][-]{subsection.13.6}{Traversieren, Mapping, Filtering, Folding und Reducing}{section.13}
\BOOKMARK [2][-]{subsection.13.7}{Pattern Matching}{section.13}
\BOOKMARK [2][-]{subsection.13.8}{Partielle Funktionen}{section.13}
\BOOKMARK [2][-]{subsection.13.9}{Currying}{section.13}
\BOOKMARK [2][-]{subsection.13.10}{Implicits}{section.13}
\BOOKMARK [2][-]{subsection.13.11}{Lazy Vals}{section.13}
\BOOKMARK [1][-]{section.14}{Scala Typsystem}{}
\BOOKMARK [2][-]{subsection.14.1}{Parametriesierte Typen}{section.14}
\BOOKMARK [2][-]{subsection.14.2}{Typen Bounds}{section.14}
\BOOKMARK [2][-]{subsection.14.3}{Nothing und Null}{section.14}
\BOOKMARK [1][-]{section.15}{Fragen}{}
\BOOKMARK [2][-]{subsection.15.1}{Tempror\344res f\374r DA}{section.15}
\BOOKMARK [3][-]{subsubsection.15.1.1}{Statische versus Dynamsich typisierte Sprachen}{subsection.15.1}
\BOOKMARK [3][-]{subsubsection.15.1.2}{Typinferenz}{subsection.15.1}
